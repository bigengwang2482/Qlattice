qlat::begin(): MPI Initialized. num_node = 2
======================================================================

                              Qlattice

                   Copyright (C) 2023 Luchang Jin

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

======================================================================
qlat::begin(): q_num_threads = 2
qlat::begin(): GeometryNode =
{ initialized = true
, num_node    = 2
, id_node     = 0
, size_node   = 1x1x1x2
, coor_node   = 0x0x0x0 }
qlat::begin_comm(comm,size_node): get_comm_list().push_back()
qlat::begin_comm(comm,size_node): get_comm_list().size() = 1
q_malloc_mmap_threshold='' (default)
q_timer_max_func_name_len=50 (default)
q_mk_id_node_in_shuffle_seed='' (default)
clear_mem_cache: 0 bytes (0.000 GB) freed.
q_timer_mini_auto_show=1 (default)
q_timer_max_always_show=10 (default)
display_geometry_node : id_node =     0 ; coor_node = 0x0x0x0 ; id_node_in_shuffle =     0 ; hostname = lattice.jinluchang.cn
display_geometry_node : id_node =     1 ; coor_node = 0x0x0x1 ; id_node_in_shuffle =     1 ; hostname = lattice.jinluchang.cn
q_time_limit=43200 (default)
get_time_limit()=12.000000 hours
q_budget=900 (default)
get_default_budget()=0.250000 hours
q_read_par_limit=16 (default)
dist_read_par_limit()=16
q_write_par_limit=16 (default)
dist_write_par_limit()=16
get_time_limit()=12.000000 hours
get_default_budget()=0.250000 hours
dist_read_par_limit()=16
dist_write_par_limit()=16
compute_traj: Checking 'results/free-4nt8/results=1000'.
obtain_lock: Trying to obtain lock 'results/free-4nt8/results=1000-lock'.
QFile: open 'results/free-4nt8/results=1000-lock/time.txt.partial' with 'w'.
QFile: close 'results/free-4nt8/results=1000-lock/time.txt.partial' with 'w'.
qrename: 'results/free-4nt8/results=1000-lock/time.txt.partial' 'results/free-4nt8/results=1000-lock/time.txt'
obtain_lock: Lock obtained 'results/free-4nt8/results=1000-lock'.
compute_traj: Start computing 'results/free-4nt8/results=1000'.
get_time_limit()=12.000000 hours
get_default_budget()=0.250000 hours
dist_read_par_limit()=16
dist_write_par_limit()=16
compute_traj_do: job_tag='free-4nt8' ; traj=1000
q_field_init='fast' (default)
set q_field_init=fast.
q_mem_cache_max_size=512 (default)
q_mem_cache_acc_max_size=512 (default)
Cache: 'CommPlanCache': 0 / 32 [16] to add
plaq :  1.00000000000000000E+00
Cache: 'CommPlanCache': 1 / 32 [16] to add
spatial plaq :  1.00000000000000000E+00
trace:  1.00000000000000000E+00
ndim: 2
"tsep"[8]:
"re-im"[2]: "re" "im"
tsep[       0] re-im[      re]  0.00000000000000000E+00
tsep[       0] re-im[      im]  0.00000000000000000E+00
tsep[       1] re-im[      re]  1.00000000000000000E+00
tsep[       1] re-im[      im]  0.00000000000000000E+00
tsep[       2] re-im[      re]  2.00000000000000000E+00
tsep[       2] re-im[      im]  0.00000000000000000E+00
tsep[       3] re-im[      re]  3.00000000000000000E+00
tsep[       3] re-im[      im]  0.00000000000000000E+00
tsep[       4] re-im[      re]  4.00000000000000000E+00
tsep[       4] re-im[      im]  0.00000000000000000E+00
tsep[       5] re-im[      re]  5.00000000000000000E+00
tsep[       5] re-im[      im]  0.00000000000000000E+00
tsep[       6] re-im[      re]  6.00000000000000000E+00
tsep[       6] re-im[      im]  0.00000000000000000E+00
tsep[       7] re-im[      re]  7.00000000000000000E+00
tsep[       7] re-im[      im]  0.00000000000000000E+00
ndim: 2
"tsep"[8]:
"re-im"[2]: "re" "im"
tsep[       0] re-im[      re]  0.00000000000000000E+00
tsep[       0] re-im[      im]  0.00000000000000000E+00
tsep[       1] re-im[      re]  1.00000000000000000E+00
tsep[       1] re-im[      im]  0.00000000000000000E+00
tsep[       2] re-im[      re]  2.00000000000000000E+00
tsep[       2] re-im[      im]  0.00000000000000000E+00
tsep[       3] re-im[      re]  3.00000000000000000E+00
tsep[       3] re-im[      im]  0.00000000000000000E+00
tsep[       4] re-im[      re]  4.00000000000000000E+00
tsep[       4] re-im[      im]  0.00000000000000000E+00
tsep[       5] re-im[      re]  5.00000000000000000E+00
tsep[       5] re-im[      im]  0.00000000000000000E+00
tsep[       6] re-im[      re]  6.00000000000000000E+00
tsep[       6] re-im[      im]  0.00000000000000000E+00
tsep[       7] re-im[      re]  7.00000000000000000E+00
tsep[       7] re-im[      im]  0.00000000000000000E+00
QFile: open 'results/free-4nt8/results=1000/data.lat.partial' with 'w'.
QFile: close 'results/free-4nt8/results=1000/data.lat.partial' with 'w'.
qrename: 'results/free-4nt8/results=1000/data.lat.partial' 'results/free-4nt8/results=1000/data.lat'
geo = { initialized   = true
, eo            = 0
, geon          =
{ initialized = true
, num_node    = 2
, id_node     = 0
, size_node   = 1x1x1x2
, coor_node   = 0x0x0x0 }
, multiplicity  = 1
, node_site     = 4x4x4x4
, expan_left    = 0x0x0x0
, expan_right   = 0x0x0x0
, node_site_exp = 4x4x4x4
, is_only_local = true }
block_site = 2x2x2x2
ls = 8, neig = 100, nkeep = 50
Cache: 'CommPlanCache': 2 / 32 [16] to add
Cache: 'CommPlanCache': 3 / 32 [16] to add
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
Cache: 'CommPlanCache': 4 / 32 [16] to add
Cache: 'CommPlanCache': 5 / 32 [16] to add
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.598E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.548E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.690693E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.661E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.623E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.822591E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.617E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  37 sqrt(qnorm_r/qnorm_in)=8.799E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=37 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 7.949384E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.598E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.548E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.690693E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.661E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.623E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.822591E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.617E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  37 sqrt(qnorm_r/qnorm_in)=8.799E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=37 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 7.949384E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.598E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.548E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.690693E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.661E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.623E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.822591E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.617E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  37 sqrt(qnorm_r/qnorm_in)=8.799E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=37 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 7.949385E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.598E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.548E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.690693E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.661E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.623E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.822591E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.617E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  37 sqrt(qnorm_r/qnorm_in)=8.799E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=37 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 7.949385E-08 from 8.000000E+00
prop qnorm =  2.02304498733453329E+02
prop qnorm =  5.07076866655439606E-01
find_max_eigen_value_hermop_sym2:     1: sqrt_qnorm_ratio = 1.15444278295577396E+00. (max eigen value of hermop_sym2)
find_max_eigen_value_hermop_sym2:     2: sqrt_qnorm_ratio = 1.28174895744192630E+00. (max eigen value of hermop_sym2)
find_max_eigen_value_hermop_sym2:     3: sqrt_qnorm_ratio = 1.38696569401745684E+00. (max eigen value of hermop_sym2)
find_max_eigen_value_hermop_sym2:     4: sqrt_qnorm_ratio = 1.48877146814636552E+00. (max eigen value of hermop_sym2)
find_max_eigen_value_hermop_sym2:     5: sqrt_qnorm_ratio = 1.58623325176833019E+00. (max eigen value of hermop_sym2)
QFile: open 'results/free-4nt8/results=1000/checkpoint.txt' with 'w'.
QFile: close 'results/free-4nt8/results=1000/checkpoint.txt' with 'w'.
release_lock: Release lock 'results/free-4nt8/results=1000-lock'
qremove: 'results/free-4nt8/results=1000-lock/time.txt'
get_time_limit()=12.000000 hours
get_default_budget()=0.250000 hours
dist_read_par_limit()=16
dist_write_par_limit()=16
compute_traj: Checking 'results/free-4nt8/results=1010'.
obtain_lock: Trying to obtain lock 'results/free-4nt8/results=1010-lock'.
QFile: open 'results/free-4nt8/results=1010-lock/time.txt.partial' with 'w'.
QFile: close 'results/free-4nt8/results=1010-lock/time.txt.partial' with 'w'.
qrename: 'results/free-4nt8/results=1010-lock/time.txt.partial' 'results/free-4nt8/results=1010-lock/time.txt'
obtain_lock: Lock obtained 'results/free-4nt8/results=1010-lock'.
compute_traj: Start computing 'results/free-4nt8/results=1010'.
get_time_limit()=12.000000 hours
get_default_budget()=0.250000 hours
dist_read_par_limit()=16
dist_write_par_limit()=16
compute_traj_do: job_tag='free-4nt8' ; traj=1010
plaq :  1.00000000000000000E+00
spatial plaq :  1.00000000000000000E+00
trace:  1.00000000000000000E+00
ndim: 2
"tsep"[8]:
"re-im"[2]: "re" "im"
tsep[       0] re-im[      re]  0.00000000000000000E+00
tsep[       0] re-im[      im]  0.00000000000000000E+00
tsep[       1] re-im[      re]  1.00000000000000000E+00
tsep[       1] re-im[      im]  0.00000000000000000E+00
tsep[       2] re-im[      re]  2.00000000000000000E+00
tsep[       2] re-im[      im]  0.00000000000000000E+00
tsep[       3] re-im[      re]  3.00000000000000000E+00
tsep[       3] re-im[      im]  0.00000000000000000E+00
tsep[       4] re-im[      re]  4.00000000000000000E+00
tsep[       4] re-im[      im]  0.00000000000000000E+00
tsep[       5] re-im[      re]  5.00000000000000000E+00
tsep[       5] re-im[      im]  0.00000000000000000E+00
tsep[       6] re-im[      re]  6.00000000000000000E+00
tsep[       6] re-im[      im]  0.00000000000000000E+00
tsep[       7] re-im[      re]  7.00000000000000000E+00
tsep[       7] re-im[      im]  0.00000000000000000E+00
ndim: 2
"tsep"[8]:
"re-im"[2]: "re" "im"
tsep[       0] re-im[      re]  0.00000000000000000E+00
tsep[       0] re-im[      im]  0.00000000000000000E+00
tsep[       1] re-im[      re]  1.00000000000000000E+00
tsep[       1] re-im[      im]  0.00000000000000000E+00
tsep[       2] re-im[      re]  2.00000000000000000E+00
tsep[       2] re-im[      im]  0.00000000000000000E+00
tsep[       3] re-im[      re]  3.00000000000000000E+00
tsep[       3] re-im[      im]  0.00000000000000000E+00
tsep[       4] re-im[      re]  4.00000000000000000E+00
tsep[       4] re-im[      im]  0.00000000000000000E+00
tsep[       5] re-im[      re]  5.00000000000000000E+00
tsep[       5] re-im[      im]  0.00000000000000000E+00
tsep[       6] re-im[      re]  6.00000000000000000E+00
tsep[       6] re-im[      im]  0.00000000000000000E+00
tsep[       7] re-im[      re]  7.00000000000000000E+00
tsep[       7] re-im[      im]  0.00000000000000000E+00
QFile: open 'results/free-4nt8/results=1010/data.lat.partial' with 'w'.
QFile: close 'results/free-4nt8/results=1010/data.lat.partial' with 'w'.
qrename: 'results/free-4nt8/results=1010/data.lat.partial' 'results/free-4nt8/results=1010/data.lat'
geo = { initialized   = true
, eo            = 0
, geon          =
{ initialized = true
, num_node    = 2
, id_node     = 0
, size_node   = 1x1x1x2
, coor_node   = 0x0x0x0 }
, multiplicity  = 1
, node_site     = 4x4x4x4
, expan_left    = 0x0x0x0
, expan_right   = 0x0x0x0
, node_site_exp = 4x4x4x4
, is_only_local = true }
block_site = 2x2x2x2
ls = 8, neig = 100, nkeep = 50
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.638E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.421E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.525139E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.678E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.602E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.805639E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.730E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=6.087E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 5.129898E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.638E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.421E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.525139E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.678E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.602E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.805639E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.730E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=6.087E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 5.129898E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.638E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.421E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.525139E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.678E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.602E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.805639E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.730E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=6.087E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 5.129898E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.638E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.421E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.525139E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.678E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=5.602E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 4.805639E-08 from 8.000000E+00
invert_with_cg(5d,5d,inv,cg): dm_in sqrt(qnorm) = 8.000000E+00
cg_with_f: start max_num_iter= 200        sqrt(qnorm_in)=6.730E+00 stop_rsd=1.000E-08
cg_with_f: final iter=  38 sqrt(qnorm_r/qnorm_in)=6.087E-09 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): total_iter=38 cycle=1 stop_rsd=1.000E-08
invert_with_cg(5d,5d,inv,cg): checking 5.129898E-08 from 8.000000E+00
prop qnorm =  2.80969993217556180E+02
prop qnorm =  7.21126316898620612E-01
find_max_eigen_value_hermop_sym2:     1: sqrt_qnorm_ratio = 1.15752294238541942E+00. (max eigen value of hermop_sym2)
find_max_eigen_value_hermop_sym2:     2: sqrt_qnorm_ratio = 1.28254240720921020E+00. (max eigen value of hermop_sym2)
find_max_eigen_value_hermop_sym2:     3: sqrt_qnorm_ratio = 1.38719889216406833E+00. (max eigen value of hermop_sym2)
find_max_eigen_value_hermop_sym2:     4: sqrt_qnorm_ratio = 1.48902999500903155E+00. (max eigen value of hermop_sym2)
find_max_eigen_value_hermop_sym2:     5: sqrt_qnorm_ratio = 1.58659082254578343E+00. (max eigen value of hermop_sym2)
QFile: open 'results/free-4nt8/results=1010/checkpoint.txt' with 'w'.
QFile: close 'results/free-4nt8/results=1010/checkpoint.txt' with 'w'.
release_lock: Release lock 'results/free-4nt8/results=1010-lock'
qremove: 'results/free-4nt8/results=1010-lock/time.txt'
program finished successfully for 'free-4nt8'.
CHECK: finished successfully.
Cache: 'CommPlanCache': 6 / 32 [16] clear
clear_mem_cache: 12418560 bytes (0.012 GB) freed.
qlat::end(): get_comm_list().pop_back()
qlat::end(): get_comm_list().size() = 0.
qlat::end(): Finalize MPI.
qlat::end(): MPI Finalized.
