#!/usr/bin/env python3

import sys
import qlat as q
import gpt as g
import numpy as np

import qlat_gpt as qg

size_node_list = [
        [1, 1, 1, 1],
        [1, 1, 1, 2],
        [1, 1, 1, 4],
        [1, 1, 1, 8],
        [2, 2, 2, 2],
        [2, 2, 2, 4],
        ]

# q.begin(sys.argv, size_node_list)

qg.begin_with_gpt()

p_source = g.default.get("--source", None)

def load():
    if p_source is None:
        g.message("Need to provide source file, use a sample gauge field")
        total_site = [ 4, 4, 4, 8, ]
        geo = q.Geometry(total_site, 1)
        gf = q.GaugeField(geo)
        rs = q.RngState("seed")
        gf.set_rand(rs.split("gf-init"), 0.5, 10)
    else:
        gf = qg.load_gauge_field(p_source)
    return gf

gf = load()

gf.show_info()

t = 0

def measure():
    gf_f.show_info()
    topo_clf = q.gf_topology_clf(gf_f)
    q.displayln_info(f"t={t} topo_clf={topo_clf}")
    topo = q.gf_topology(gf_f)
    topo_field = q.gf_topology_field(gf_f)
    t_sum = topo_field.glb_sum_tslice()
    t_sum = [ str((t, t_sum.get_elem(t).item(),)) for t in range(t_sum.n_points()) ]
    q.displayln_info(f"t={t} topo_5li={topo}")
    q.displayln_info("\n".join(t_sum))
    topo_terms = q.gf_topology_terms(gf_f)
    topo_terms_str = ',\n '.join([ str(x) for x in topo_terms ])
    q.displayln_info(f"t={t} {sum(topo_terms)} [ {topo_terms_str},\n]")

gf_f = gf.copy()

flow_time = 1.0

def wilson_flow_force(gf, c1 = 0.0):
    ga = q.GaugeAction(3.0, c1)
    gm_force = q.GaugeMomentum()
    q.set_gm_force(gm_force, gf, ga)
    return gm_force

measure()

# for i in range(5):
#     c1 = -0.331
#     q.gf_wilson_flow(gf_f, flow_time, 50, existing_flow_time = t, c1 = c1)
#     t += flow_time
#     measure()

q.timer_display()

qg.end_with_gpt()
